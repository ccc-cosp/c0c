# file _test/gfunc.c  
# global _s _int 
	.comm	_s, 4, 2
# global _i _int 
	.comm	_i, 4, 2
# global _n _int 
	.comm	_n, 4, 2
# function _sum _int 
	.text
	.globl	_sum
	.def	_sum;	.scl	2;	.type	32;	.endef
_sum:
	pushl	%ebp
	movl	%esp, %ebp
# = _s $0 
	movl	$0, eax
	movl	eax, _s
# = _i $1 
	movl	$1, eax
	movl	eax, _i
WBEGIN0:
# <= _t0 _i _n
# jnz _WEND1 _t0 
	jne	_WEND1	_t0
# + _t0 _s _i
	movl	_s, eax
	addl	_i, eax
	movl	eax, _t0
# = _s _t0 
	movl	_t0, eax
	movl	eax, _s
# jmp _WBEGIN0  
	jmp	_WBEGIN0
WEND1:
# return _s  
	ret	_s
# fend _sum  
	ret
# function _main _int 
	.text
	.globl	_main
	.def	_main;	.scl	2;	.type	32;	.endef
_main:
	pushl	%ebp
	movl	%esp, %ebp
# = _n $10 
	movl	$10, eax
	movl	eax, _n
# str _S2 "sum(%d)=%d\n" 
_S2:
	.ascii "sum(%d)=%d\n"
# push _S2  
	push	_S2
# push _n  
	push	_n
# call _t0 _sum 
	call _sum
# push _t0  
	push	_t0
# call _t1 _printf 
	call _printf
# fend _main  
	ret
